#!/usr/bin/python
import Image




#Spread function.
#Checks each item from colours dictionary (Skin tones we flag as 'porn')
#Checks each element of color dictionary separately, further divides
#each element by r-g-b
#each element divided by tuple split 
def pixfun(pix):
	spread = 5
	for color in colours:
		if pix[0]<=(color[0] + spread) and pix[0]>=(color[0] - spread) \
			and pix[1]<=(color[1] + spread) and pix[1]>=(color[1] - spread) \
				and pix[2]<=(color[2] + spread) and pix[2]>=(color[2] - spread):
			return 1



img = Image.open("/home/moot/Pictures/porn.jpg")
pix = img.load()

width, height = img.size #Image size

pixels = tuple(img.getdata())  #grab all pixel values and put into a list of tuples



#colour dictionary
colours = {
	(245, 245, 245): 'w1',
	(190, 105, 85):	 'w2',
	(129, 63, 49):	'w3',
	(250, 217, 160): 'w4',
	(247, 217, 214): 'lc',
	(240, 186, 173): 'c',
	(212, 128, 107): 'dc',
	(235, 178, 133): 'asian',
	(195, 116,  77): 'lb',
	#############
	(69,  42,  29): 'db',
	(45, 34, 30): 'db1',
	(60, 46, 40): 'db2',
	(75, 57, 50): 'db3',
	(90, 69, 60): 'db4',
	(105, 80, 70): 'db5',
	(120, 92, 80): 'db6',
	(135, 103, 90): 'db7',
	(150, 114, 100): 'db8',
	(165, 126, 110): 'db9',
	(180, 138, 120): 'db10',
	(195, 149, 130): 'db11',
	(210, 161, 140): 'db12',
	(225, 172, 150): 'db13',
	(240, 184, 160): 'db14',
	(255, 195, 170): 'db15',
	(255, 206, 180): 'db16',
	(255, 218, 190): 'db17',
	(255, 229, 200): 'db18',
###############
	(255,223,196): 'db181',
	(240,213,190): 'db182',
	(238,206,179): 'db183',
	(225,184,153): 'db184',
	(229,194,152): 'db185',
	(255,220,178): 'db186',
	(229,184,143): 'db187',
	(229,160,115): 'db188',
	(231,158,109): 'db189',
	(219,144,101): 'db1810',
	(206,150,124): 'db1811',
	(198,120,86): 'db1812',
	(186,108,73): 'db1813',
	(165,114,87): 'db1814',
	(240,200,201): 'db1815',
	(221,168,160): 'db1816',
	(185,124,109): 'db1817',
	(168,117,108): 'db1818',
	(173,100,82): 'db1819',
	(92,56,54): 'db1820',
	(203,132,66): 'db1821',
	(189,114,60): 'db1822',
	(112,65,57): 'db1823',
	(163,134,106): 'db1824',
	(135,4,0): 'db1825',
	(113,1,1): 'db1826',
	(67,0,0): 'db1827',
	(91,0,1): 'db1828',
	(48,46,46): 'db1829',
	(0,0,0): 'db1820',
	######################
	
		
	(0,   0,   0): 'test'
	
}

colour_type = colours.get(pixels, 'no match') 


match = 0 #default value

for x in pixels:
#	print pixel #used to ensure pixels are in the (x, x ,x) format
#	colour_type = colours.get(pixel, 'no match')
#	print colour_type #printing either 'no match' or one of the dictionary names(w1,c,asian)
#	if(colour_type != 'no match'):
#		match = match + 1 #For every matched pixel, + 1

#	if(match >= 5):
#		"We have enough evidence to prove this______"
#		break

	pron = pixfun(x)
	if pron == 1:
		match = match + 1

print "Matches", match
print "Total Pixels:", len(pixels)
